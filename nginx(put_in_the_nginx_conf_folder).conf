# user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
    
    
}

rtmp {
    server {
        listen 1935;
        application live {
           	live on;

           	#Push the stream to the local HLS application
           	push rtmp://localhost:1935/hls;

            exec ffmpeg -i rtmp://localhost:1935/$app/$name -c:v libx264 -vf "scale=w=640:h=360" -b:v 288k -c:a aac -b:a 64k -f flv rtmp://localhost:1935/hls/${name}_low
              -c:v libx264 -vf "scale=w=842:h=480" -b:v 512k -c:a aac -b:a 128k -f flv rtmp://localhost:1935/hls/${name}_mid
              -c:v libx264 -vf "scale=w=1280:h=720" -b:v 1024k -c:a aac -b:a 192k -f flv rtmp://localhost:1935/hls/${name}_hi;
        }

        application hls {
           	live on;
        # Only accept publishing from localhost.
         #  	allow publish 127.0.0.1;
         #  	deny publish all;
        #Streams as HLS
           	hls on;
           	hls_path /var/vds1; 
           	hls_fragment 3s;
           	hls_nested on;
           	hls_fragment_naming system;

            hls_variant _low BANDWIDTH=288000; # Low quality
            hls_variant _mid BANDWIDTH=512000; # Medium quality
            hls_variant _hi  BANDWIDTH=1024000; # High quality
        }

        application vod {
            play /var/vds;
        }

        application stream_app {
            live on;

            record all;
            record_path /var/recordings;
            record_unique on;
            push rtmp://a.rtmp.youtube.com/live2/placeholder_stream_key;             
        }

        application stream_app_facebook {
        live on;
        record off;
        push rtmp://127.0.0.1:19350/rtmp/placeholder_stream_key;
        
        }
    }
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        root /var/www/html;
        server_name  localhost;
        
        location /vod {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            add_header Cache-Control no-cache;
            alias /var/vds; 
        }


        location /hls{
        	# Disable cache
        	add_header ‘Cache-Control’ ‘no-cache’;
        	# CORS setup
        	add_header ‘Access-Control-Allow-Origin’ ‘*’always;
        	add_header ‘Access-Control-Expose-Headers’ ‘Content-Length’;
        	# allow CORS preflight requests
        	if ($request_method = ‘OPTIONS’){
            	add_header ‘Access-Control-Allow-Origin’ ‘*’;
            	add_header ‘Access-Control-Max-Age’ 1728000;
            	add_header ‘Content-Type’ "text/plain charset=UTF-8";
            	add_header ‘Content-Length’ 0;
            	return 204;
        	}
        	# MIME type for HLS
        	types{
            	application/dash+xml mpd;
            	application/vnd.apple.mpegurl m3u8;
            	video/mp2 tts;
        	}
        	alias /var/vds1/;
    	}
    	
    	# Tính năng thống kê - RTMP statistics in XML
    	location /stat{
        	rtmp_stat all;
        	rtmp_stat_stylesheet stat.xsl;
    	}
    	
    	location /stat.xsl {
   	     	root /var/www/html/;
   	    }


        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}


    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}

